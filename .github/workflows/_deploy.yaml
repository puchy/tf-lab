name: Terraform deployment

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'The environment to deploy'
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write

concurrency:
  group: ${{ inputs.environment }}
  #cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ github.token }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  plan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    defaults:
      run:
        shell: bash
    env:
      TFDOCS_VERSION: v0.19.0
      TFLINT_VERSION: v0.53.0
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Setup Terraform with specific version
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: 1.9.8

      - name: Install tflint
        run: |
          wget -nv -O /dev/shm/tflint.zip https://github.com/terraform-linters/tflint/releases/download/${TFLINT_VERSION}/tflint_linux_amd64.zip
          unzip -d $HOME/bin /dev/shm/tflint.zip
          echo "$HOME/bin" >> $GITHUB_PATH
          echo tflint -v

      - name: Install terraform-docs
        run: |
          wget -nv -O - https://github.com/terraform-docs/terraform-docs/releases/download/${TFDOCS_VERSION}/terraform-docs-${TFDOCS_VERSION}-linux-amd64.tar.gz | tar -zxvf - -C $HOME/bin terraform-docs
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Install pre-commit
        run: python -m pip install pre-commit
      
      - name: Initialize pre-commit
        run: pre-commit install

      - name: Pre-commit check
        run: |
          pre-commit run --color=always --all-files -v
    
      - name: Terraform format
        id: fmt
        run: terraform fmt -check  
        
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform validate
        id: validate
        run: terraform validate  

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -out=tfplan-pr${{ github.event.pull_request.number }} && terraform show -no-color tfplan-pr${{ github.event.pull_request.number }}
        working-directory: ./aws/terraform/environments/${{ inputs.environment }}

      - name: Upload plan to S3
        run: |
          aws s3 cp ./aws/terraform/environments/${{ inputs.environment }}/tfplan-pr${{ github.event.pull_request.number }} \
          s3://tf-lab-pucherna-bucket/tf-plans/tfplan-pr${{ github.event.pull_request.number }} \
          --acl bucket-owner-full-control

      - name: Comment PR
        uses: actions/github-script@v6
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Environment üõ†: \`${{ inputs.environment }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>
            * Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\` *`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })


  deploy:
    name: 'Terraform apply'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push')
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Setup Terraform with specific version
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: 1.9.8
      
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./aws/terraform/environments/${{ inputs.environment }}

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
        working-directory: ./aws/terraform/environments/${{ inputs.environment }}

      - name: Terraform validate
        id: validate
        run: terraform validate
        working-directory: ./aws/terraform/environments/${{ inputs.environment }}
      
      - name: Download plan from S3
        run: |
          aws s3 cp \
            s3://tf-lab-pucherna-bucket/tf-plans/tfplan-pr${{ steps.pr-info.outputs.prNumber }} \
            ./aws/terraform/environments/${{ inputs.environment }}/tfplan-pr${{ steps.pr-info.outputs.prNumber }}

      - name: Terraform Apply
        run: terraform apply -auto-approve "tfplan-pr${{ steps.pr-info.outputs.prNumber }}"
        working-directory: ./aws/terraform/environments/${{ inputs.environment }}